from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


async def post_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    keyboard = [
        "–ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–∏—Å ‚úèÔ∏è",
        "–ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–≥–∏ üß∑",
        "‚ûï‚ûñ –∫–æ–º –ø–æ—Å–ª—É–≥–∏",
        "‚ûï‚ûñ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏",
        "‚ûï‚ûñ —Å–≤—ñ—Ç–ª–æ",
        "–†–µ–ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª ‚ñ∂Ô∏è"
    ]

    for button in keyboard:
        builder.add(InlineKeyboardButton(text=button, callback_data=button))

    return builder.adjust(2).as_markup(resize_keyboard=True)


async def utilities_kb(name) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    keyboard = [
        "–ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–∏—Å ‚úèÔ∏è",
        "–ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–≥–∏ üß∑",
        name,
        "–†–µ–ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª ‚ñ∂Ô∏è"
    ]

    for button in keyboard:
        builder.add(InlineKeyboardButton(text=button, callback_data=button))

    return builder.adjust(2).as_markup(resize_keyboard=True)


async def tags_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    keyboard = ["–°–∞–ª—Ç–æ–≤–∫–∞", "–¶–µ–Ω—Ç—Ä", 
                "–ê–ª–µ–∫—Å–µ–µ–≤–∫–∞", "–ü–∞–≤–ª–æ–≤–æ–ü–æ–ª–µ ",
                "–û–¥–µ—Å—Å–∫–∞—è", "–•–æ–ª–ì–æ—Ä–∞", 
                "–ù–æ–≤—ã–µ–î–æ–º–∞", "–•–¢–ó",
                "üîô –ù–∞–∑–∞–¥"]

    for button in keyboard:
        builder.add(InlineKeyboardButton(text=button, callback_data=button))

    return builder.adjust(2, 2, 2, 2, 1).as_markup(resize_keyboard=True)
