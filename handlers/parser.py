import re
import requests

from create_bot import bot
from aiogram import types
from bs4 import BeautifulSoup

async def get_url(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")
    return soup

#–û—Ç—Ä–∏–º—É—é —Ñ–æ—Ç–æ
async def get_photo(soup: BeautifulSoup):
    photo = soup.find("div", class_="swiper-wrapper").find_all("img")

    list_src_photo = [] # —Å–ø–∏—Å–æ–∫ scr —Ñ–æ—Ç–æ
    for src in photo:
        list_src_photo.append(src.get("src"))

    if len(list_src_photo) > 10:
        del list_src_photo[10:]

    media_group = []
    for photo_url in list_src_photo:
        media_group.append(types.InputMediaPhoto(media=photo_url))

    return media_group
    
#–û—Ç—Ä–∏–º—É—é –æ–ø–∏—Å
async def get_caption(soup: BeautifulSoup):
    #–ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –æ–ø–∏—Å—É (—Ç–µ–≥–∏ –Ω–∞ –æ–ª—Ö)
    caption = soup.find("ul", class_="css-sfcl1s").find_all("p")
    list_words_caption = {}
    need = ["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:", "–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å:", "–≠—Ç–∞–∂:", "–≠—Ç–∞–∂–Ω–æ—Å—Ç—å:", "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç:", "–ó–∞–≥–∞–ª—å–Ω–∞ –ø–ª–æ—â–∞:", "–ü–æ–≤–µ—Ä—Ö:", "–ü–æ–≤–µ—Ä—Ö–æ–≤—ñ—Å—Ç—å:"]
    for capt in caption:
        if need[0] in capt.text or need[4] in capt.text:
            list_words_caption[1] = capt.text
        elif need[1] in capt.text or need[5] in capt.text:
            list_words_caption[2] = capt.text
        elif need[2] in capt.text or need[6] in capt.text:
            list_words_caption[3] = capt.text
        elif need[3] in capt.text or need[7] in capt.text:
            list_words_caption[4] = capt.text

    #–û—Ç—Ä–∏–º—É—é —á–∏—Å–ª–æ –∑ —Ä—è–¥–∫–∞
    count_room = int((re.search(r'\d+', list_words_caption[1])).group())
    count_area = int((re.search(r'\d+', list_words_caption[2])).group())
    flour_have = int((re.search(r'\d+', list_words_caption[3])).group())
    floor_everything = int((re.search(r'\d+', list_words_caption[4])).group())
    flour = f"{flour_have}/{floor_everything}"

    #–ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≥—Ä–æ—à–µ–π
    money = soup.find("h3").text


    without_space = ''.join(money.split())
    find_money_int = int((re.search(r'\d+', without_space)).group())
    get_tegs_money = await tegs_select(find_money_int)

    #–ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –æ–ø–∏—Å—É –Ω–∞ olx
    caption_text = soup.find('div', class_="css-bgzo2k er34gjf0").text

    if len(caption_text) > 800:
        caption_text = caption_text[0:800]


    # –û–ø–∏—Å –∞–ª—å–±–æ–º—É
    album_caption =f"""
üè°{count_room}–∫ –∫–≤
üè¢–≠—Ç–∞–∂:{flour}
üîë–ü–ª–æ—â–∞–¥—å:{count_area}–º2
‚ìÇÔ∏è–ú–µ—Ç—Ä–æ:
üëâ–ê–¥—Ä–µ—Å:
üí≥Ô∏è{money}

–û–ø–∏—Å–∞–Ω–∏–µ : {caption_text}

#{count_room}–ö–ö–í #{get_tegs_money}

–°–≤—è–∑—å —Ç—É—Ç:
–ù–∞–ø–∏—Å–∞—Ç—å ‚úçÔ∏è @realtor_057 
–ü–æ–∑–≤–æ–Ω–∏—Ç—å ‚òéÔ∏è +380996643097
"""

    return album_caption

#–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–≥—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ü—ñ–Ω–∏
async def tegs_select(price):
    if 0 <= price <= 1999:
        return "0-2000–≥—Ä–Ω"
    elif 2000 <= price <= 4999:
        return "20005000–≥—Ä–Ω"
    elif 5000 <= price <= 6999:
        return "50007000–≥—Ä–Ω"
    elif 7000 <= price <= 8999:
        return "70009000–≥—Ä–Ω"
    elif 9000 <= price <= 11999:
        return "900012000–≥—Ä–Ω"
    elif 12000 <= price <= 13999:
        return "1200014000–≥—Ä–Ω"
    elif 14000 <= price <= 14999:
        return "1400015000–≥—Ä–Ω"
    elif price >= 15000:
        return "–í—ã—à–µ15000–≥—Ä–Ω"

#–û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö —ñ –∑–∞–ø—É—Å–∫ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
async def get_data(message: types.Message):

    soup: BeautifulSoup = await get_url(message.text)
    
    media_group = await get_photo(soup)
    album_caption = await get_caption(soup)

    await send_data(message, media_group, album_caption)
    
#–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è   
async def send_data(message: types.Message, media_group, album_caption):
    media_messages = await bot.send_media_group(message.chat.id, media=media_group)
    
    await bot.edit_message_caption(
        chat_id=media_messages[0].chat.id,
        message_id=media_messages[0].message_id,
        caption=album_caption
    )




